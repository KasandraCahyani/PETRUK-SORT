#include <iostream>
using namespace std;
 
void merge(int a[], int low, int  mid, int high){
    int i=low;
	int j=mid + 1;
    int k=0;
    int *temp = new int[high-low+1];
    while(i<=mid && j<=high){
        if(a[i]<=a[j]){
            temp[k]=a[i];
            k++;
            i++;
        }
        else{
            temp[k]=a[j];
            k++;
            j++;
    	}
    }
    while(i<=mid){
        temp[k]=a[i];
        k++;
        i++;
    }
    while(j<=high){
        temp[k]=a[j];
        k++;
        j++;
    }
    for(k=0, i=low; i<=high; ++i, ++k){
        a[i]=temp[k];
    }
    delete []temp;
}

void merge_sort1(int a[], int low, int high){
    int mid;
    if(low < high){
        mid=(low + high)/2;
        merge_sort1(a, low, mid);
        merge_sort1(a, mid+1, high);
        merge(a, low, mid, high);
    }
}

void merge_sort(int a[], int a_size){
    merge_sort1(a, 0, a_size-1);
}

void cetak(int *data, int n) {
	for (int i=0;i<n;++i){
		cout<<data[i]<<" ";
	}	
	cout<< endl;
}
 
int main() {
  int data[] = {58, 2, 34, 70, 66, 17 , 21, 0, 49, 88};
  int n = sizeof(data)/sizeof(data[0]);
	  cout<<"DATA :"<<endl;
	  cetak(data, n);
	  merge_sort(data, n);
	  cout<<"Setelah Merge Sort :"<<endl;
	  cetak(data, n);
  return (0);
}
